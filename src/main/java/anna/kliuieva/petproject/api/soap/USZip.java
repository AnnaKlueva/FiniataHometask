
package anna.kliuieva.petproject.api.soap;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 */
@WebServiceClient(name = "USZip", targetNamespace = "http://www.webserviceX.NET", wsdlLocation = "http://www.webservicex.net/uszip.asmx?wsdl")
public class USZip
        extends Service {

    private final static URL USZIP_WSDL_LOCATION;
    private final static WebServiceException USZIP_EXCEPTION;
    private final static QName USZIP_QNAME = new QName("http://www.webserviceX.NET", "USZip");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://www.webservicex.net/uszip.asmx?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        USZIP_WSDL_LOCATION = url;
        USZIP_EXCEPTION = e;
    }

    public USZip() {
        super(__getWsdlLocation(), USZIP_QNAME);
    }

    public USZip(WebServiceFeature... features) {
        super(__getWsdlLocation(), USZIP_QNAME, features);
    }

    public USZip(URL wsdlLocation) {
        super(wsdlLocation, USZIP_QNAME);
    }

    public USZip(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, USZIP_QNAME, features);
    }

    public USZip(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public USZip(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * @return returns USZipSoap
     */
    @WebEndpoint(name = "USZipSoap")
    public USZipSoap getUSZipSoap() {
        return super.getPort(new QName("http://www.webserviceX.NET", "USZipSoap"), USZipSoap.class);
    }

    /**
     * @param features A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns USZipSoap
     */
    @WebEndpoint(name = "USZipSoap")
    public USZipSoap getUSZipSoap(WebServiceFeature... features) {
        return super.getPort(new QName("http://www.webserviceX.NET", "USZipSoap"), USZipSoap.class, features);
    }

    private static URL __getWsdlLocation() {
        if (USZIP_EXCEPTION != null) {
            throw USZIP_EXCEPTION;
        }
        return USZIP_WSDL_LOCATION;
    }

}
