buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "io.qameta.allure:allure-gradle:2.8"
    }
}

apply plugin: 'io.qameta.allure'

allure {
    autoconfigure = true
    aspectjweaver = true
    configuration = 'implementation' // Updated from 'compile'
    version = '2.13.9' // Latest Java 8-compatible version
}

group 'anna.klueva'
version '1.0-SNAPSHOT'

apply plugin: 'groovy'
apply plugin: 'java'

sourceCompatibility = JavaVersion.VERSION_1_8
compileTestJava.options.encoding = 'UTF-8'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.seleniumhq.selenium:selenium-java:3.141.59' // Latest Java 8-compatible version
    implementation 'org.yaml:snakeyaml:1.30' // Last Java 8-compatible version
    implementation 'org.codehaus.groovy:groovy-all:2.5.14' // Latest Java 8-compatible version
    implementation 'io.rest-assured:rest-assured:4.3.3' // Latest Java 8-compatible version
    implementation 'org.json:json:20210307' // Last Java 8-compatible version
    testImplementation 'org.testng:testng:6.14.3' // Java 8-compatible TestNG version
}

tasks.withType(Test).configureEach {
    finalizedBy 'allureReport'
}

task runAllTests(type: Test, dependsOn: 'generatePropertyFile') {
    group = 'Test'
    description  = 'Runs TestNG all tests'
    useTestNG()
}

task runLoginTests(type: Test, dependsOn: 'generatePropertyFile') {
    group = 'Test'
    description  = 'Runs TestNG tests in the \'login\' group'
    useTestNG() {
        includeGroups 'login'
    }
}

task runSoapTests(type: Test) {
    group = 'Test'
    description  = 'Runs TestNG tests in the \'soapApi\' group'
    useTestNG() {
        includeGroups 'soapApi'
    }
}

task runRestTests(type: Test) {
    group = 'Test'
    description  = 'Runs TestNG tests in the \'restApi\' group'
    useTestNG() {
        includeGroups 'restApi'
    }
}

task generatePropertyFile(type: JavaExec) {
    description = 'Creates config.properties file with selected profile'
    mainClass = 'anna.kliuieva.petproject.PropertyFileGenerator'
    classpath = sourceSets.main.runtimeClasspath
    systemProperty "test.config", project.findProperty("test.config") ?: "default-config"
}
